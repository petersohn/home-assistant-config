homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Budapest
  customize: !include customize.yaml

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  api_password: !secret http_password
  # Uncomment this to add a password (recommended!)
  # api_password: PASSWORD
  # Uncomment this if you are using SSL or running in Docker etc
  # base_url: example.duckdns.org:8123

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

recorder:
  purge_days: 30

# Enables support for tracking state changes over time.
history:
  exclude:
    domains:
      - group

# View all events in a logbook
logbook:
  exclude:
    entities:
      - sensor.yr_symbol

# Track the sun
sun:

mqtt:
  broker: 127.0.0.1
  port: 1883
  client_id: home-assistant-1
  username: !secret mosquitto_username
  password: !secret mosquitto_pasword

sensor:
  - platform: yr
    state_topic: yr
    monitored_conditions:
      - temperature
      - symbol
      - precipitation
      - windSpeed
      - windDirection
      - humidity
      - cloudiness
  - platform: moon

binary_sensor:
  - platform: mqtt
    state_topic: devices/testDevice/button/state
    name: 'Test device button'
    payload_on: 1
    payload_off: 0
  - platform: mqtt
    state_topic: devices/testDevice/availability
    name: 'Test device available'
    value_template: '{{ value_json.available }}'
    payload_on: true
    payload_off: false
  - platform: rpi_gpio
    ports:
      2: test
  - platform: ping
    host: !secret router_address
    name: network_available
  - platform: ping
    host: !secret desktop_address
    name: desktop_available
  - platform: ping
    host: google.com
    name: internet_available
  - platform: ping
    host: !secret gateway_address
    name: gateway_available
  - platform: command_line
    command: 'timeout 2 netcat localhost 8888 </dev/null && echo ON || echo OFF'
    name: ssh_tunnel_available

device_tracker:
  - platform: asuswrt
    host: !secret router_address
    username: !secret router_username
    ssh_key: !secret ssh_key

switch:
  - platform: mqtt
    name: 'Test Device Led'
    command_topic: devices/testDevice/led/set
    state_topic: devices/testDevice/led/state
    payload_on: 1
    payload_off: 0

# Text to speech
tts:
  platform: google

group: !include groups.yaml
automation: !include automations.yaml
