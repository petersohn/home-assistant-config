global_modules:
    - mutex_graph
    - expression

locker:
    module: locker
    class: Locker
    global_dependencies: mutex_graph
    enable_logging: false

wind_direction_yr:
    class: WindDirection
    module: wind_direction
    entity: sensor.yr_wind_direction

wind_direction:
    class: WindDirection
    module: wind_direction
    entity: sensor.wind_direction

wind_direction_average_icon:
    class: WindDirection
    module: wind_direction
    entity: sensor.wind_direction_average

heating_pump:
    class: TemperatureBasic
    module: temperature_basic
    dependencies: locker
    sensor_out: sensor.temperature_furnace_wood
    sensor_in: sensor.temperature_furnace_wood_in
    outside_sensor: sensor.temperature_outside
    target: switch.heating_pump
    target_difference: 6
    tolerance: 1
    maximum_out: 80
    minimum_out: 30

auto_switch_light_driveway:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_driveway
    switch: input_select.light_driveway
    reentrant: true

auto_switch_light_well:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_well
    switch: input_select.light_well
    reentrant: true

auto_switch_light_gate_reflector:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_gate_reflector
    switch: input_select.light_gate_reflector
    reentrant: true

auto_switch_light_garage:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_garage
    switch: input_select.light_garage
    reentrant: true

auto_switch_light_outside_1:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_outside_1
    switch: input_select.light_outside_1
    reentrant: true

auto_switch_light_outside_2:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_outside_2
    switch: input_select.light_outside_2
    reentrant: true

auto_switch_light_outside_3:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_outside_3
    switch: input_select.light_outside_3
    reentrant: true

auto_switch_light_outside_4:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_outside_4
    switch: input_select.light_outside_4
    reentrant: true

auto_switch_light_outside_5:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_outside_5
    switch: input_select.light_outside_5
    reentrant: true

auto_switch_light_outside_6:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_outside_6
    switch: input_select.light_outside_6
    reentrant: true

sun_enabler_night:
    module: enabler
    class: ValueEnabler
    dependencies: locker
    entity: binary_sensor.night
    value: 'on'

wind_short_term:
    module: history
    class: HistoryManager
    dependencies: locker
    entity: sensor.wind_strength

wind_direction_short_term:
    module: history
    class: HistoryManager
    dependencies: locker
    entity: sensor.wind_direction

wind_disabler:
    module: enabler
    class: HistoryEnabler
    dependencies:
        - wind_short_term
        - locker
    manager: wind_short_term
    aggregator: max
    max: 50
    interval:
        minutes: 10
    default: 0

wind_direction_average:
    module: history
    class: AggregatedValue
    dependencies:
        - wind_direction_short_term
        - locker
    manager: wind_direction_short_term
    target: sensor.wind_direction_average
    interval:
        minutes: 10
    base_interval:
        seconds: 10
    aggregator: anglemean
    attributes:
        unit_of_measurement: "°"
        friendly_name: "Szélirány"

motion_sensor_driveway_uppest_history:
    module: history
    class: HistoryManager
    dependencies: locker
    entity: binary_sensor.motion_sensor_driveway_uppest

motion_sensor_driveway_uppest_average:
    module: history
    class: AggregatedValue
    dependencies:
        - motion_sensor_driveway_uppest_history
        - locker
    manager: motion_sensor_driveway_uppest_history
    target: sensor.motion_sensor_driveway_uppest_average
    interval:
        hours: 1
    aggregator: mean
    attributes:
        friendly_name: "Bejáró legfelső"
        icon: mdi:percent

motion_sensor_driveway_uppest_enabler:
    module: enabler
    class: ExpressionEnabler
    dependencies:
        - sun_enabler_night
        - locker
    expr: >
        e.sun_enabler_night and
        v.sensor.motion_sensor_driveway_uppest_average <= 0.2

motion_sensor_driveway_upper_history:
    module: history
    class: HistoryManager
    dependencies: locker
    entity: binary_sensor.motion_sensor_driveway_upper

motion_sensor_driveway_upper_average:
    module: history
    class: AggregatedValue
    dependencies:
        - motion_sensor_driveway_upper_history
        - locker
    manager: motion_sensor_driveway_upper_history
    target: sensor.motion_sensor_driveway_upper_average
    interval:
        hours: 1
    aggregator: mean
    attributes:
        friendly_name: "Bejáró felső"
        icon: mdi:percent

motion_sensor_driveway_upper_enabler:
    module: enabler
    class: ExpressionEnabler
    dependencies:
        - sun_enabler_night
        - locker
    expr: >
        e.sun_enabler_night and
        v.sensor.motion_sensor_driveway_upper_average <= 0.2

motion_sensor_driveway_lower_history:
    module: history
    class: HistoryManager
    dependencies: locker
    entity: binary_sensor.motion_sensor_driveway_lower

motion_sensor_driveway_lower_average:
    module: history
    class: AggregatedValue
    dependencies:
        - motion_sensor_driveway_lower_history
        - locker
    manager: motion_sensor_driveway_lower_history
    target: sensor.motion_sensor_driveway_lower_average
    interval:
        hours: 1
    aggregator: mean
    attributes:
        friendly_name: "Bejáró alsó"
        icon: mdi:percent

motion_sensor_driveway_lower_enabler:
    module: enabler
    class: ExpressionEnabler
    dependencies:
        - sun_enabler_night
        - locker
    expr: >
        e.sun_enabler_night and
        v.sensor.motion_sensor_driveway_lower_average <= 0.2

motion_sensor_garage_history:
    module: history
    class: HistoryManager
    dependencies: locker
    entity: binary_sensor.motion_sensor_garage

motion_sensor_garage_average:
    module: history
    class: AggregatedValue
    dependencies:
        - motion_sensor_garage_history
        - locker
    manager: motion_sensor_garage_history
    target: sensor.motion_sensor_garage_average
    interval:
        hours: 1
    aggregator: mean
    attributes:
        friendly_name: "Garázs"
        icon: mdi:percent

motion_sensor_garage_enabler:
    module: enabler
    class: ExpressionEnabler
    dependencies:
        - sun_enabler_night
        - locker
    expr: >
        e.sun_enabler_night or
        (v.input_select.presence_mode == "home" and
        v.sensor.light_shadow != 'unknown' and v.sensor.light_shadow <= 20)

motion_sensor_garage2_history:
    module: history
    class: HistoryManager
    dependencies: locker
    entity: binary_sensor.motion_sensor_garage2

motion_sensor_garage2_average:
    module: history
    class: AggregatedValue
    dependencies:
        - motion_sensor_garage2_history
        - locker
    manager: motion_sensor_garage2_history
    target: sensor.motion_sensor_garage2_average
    interval:
        hours: 1
    aggregator: mean
    attributes:
        friendly_name: "Garázs 2"
        icon: mdi:percent

motion_sensor_well_history:
    module: history
    class: HistoryManager
    dependencies: locker
    entity: binary_sensor.motion_sensor_well

motion_sensor_well_average:
    module: history
    class: AggregatedValue
    dependencies:
        - motion_sensor_well_history
        - locker
    manager: motion_sensor_well_history
    target: sensor.motion_sensor_well_average
    interval:
        hours: 1
    aggregator: mean
    attributes:
        friendly_name: "Kút"
        icon: mdi:percent

motion_sensor_well_enabler:
    module: enabler
    class: ExpressionEnabler
    dependencies:
        - sun_enabler_night
        - locker
    expr: >
        e.sun_enabler_night and
        v.sensor.motion_sensor_well_average <= 0.2

driveway_uppest_reflector_motion_sensor:
    class: TimerSwitch
    module: timer_switch
    dependencies:
        - auto_switch_light_gate_reflector
        - motion_sensor_driveway_uppest_enabler
        - locker
    sensor: binary_sensor.motion_sensor_driveway_uppest
    targets:
        - auto_switch_light_gate_reflector
    enabler: motion_sensor_driveway_uppest_enabler
    time: 1

driveway_uppest_motion_sensor:
    class: TimerSwitch
    module: timer_switch
    dependencies:
        - auto_switch_light_driveway
        - motion_sensor_driveway_uppest_enabler
        - locker
    sensor: binary_sensor.motion_sensor_driveway_uppest
    targets:
        - auto_switch_light_driveway
    enabler: motion_sensor_driveway_uppest_enabler
    time: 2

driveway_upper_reflector_motion_sensor:
    class: TimerSwitch
    module: timer_switch
    dependencies:
        - auto_switch_light_gate_reflector
        - motion_sensor_driveway_upper_enabler
        - locker
    sensor: binary_sensor.motion_sensor_driveway_upper
    targets:
        - auto_switch_light_gate_reflector
    enabler: motion_sensor_driveway_upper_enabler
    time: 1

driveway_upper_motion_sensor:
    class: TimerSwitch
    module: timer_switch
    dependencies:
        - auto_switch_light_driveway
        - motion_sensor_driveway_upper_enabler
        - locker
    sensor: binary_sensor.motion_sensor_driveway_upper
    targets:
        - auto_switch_light_driveway
    enabler: motion_sensor_driveway_upper_enabler
    time: 2

driveway_lower_motion_sensor:
    class: TimerSwitch
    module: timer_switch
    dependencies:
        - auto_switch_light_driveway
        - motion_sensor_driveway_lower_enabler
        - locker
    sensor: binary_sensor.motion_sensor_driveway_lower
    targets:
        - auto_switch_light_driveway
    enabler: motion_sensor_driveway_lower_enabler
    time: 2

garage_driveway_motion_sensor:
    class: TimerSwitch
    module: timer_switch
    dependencies:
        - auto_switch_light_driveway
        - sun_enabler_night
        - locker
    sensor: binary_sensor.motion_sensor_garage
    targets:
        - auto_switch_light_driveway
    enabler: sun_enabler_night
    time: 2

garage_motion_sensor:
    class: TimerSwitch
    module: timer_switch
    dependencies:
        - auto_switch_light_garage
        - motion_sensor_garage_enabler
        - locker
    sensor: binary_sensor.motion_sensor_garage
    targets:
        - auto_switch_light_garage
    enabler: motion_sensor_garage_enabler
    time: 1

garage2_motion_sensor:
    class: TimerSwitch
    module: timer_switch
    dependencies:
        - auto_switch_light_garage
        - locker
    sensor: binary_sensor.motion_sensor_garage2
    targets:
        - auto_switch_light_garage
    time: 1

well_motion_sensor:
    class: TimerSwitch
    module: timer_switch
    dependencies:
        - auto_switch_light_well
        - motion_sensor_well_enabler
        - locker
    sensor: binary_sensor.motion_sensor_well
    targets:
        - auto_switch_light_well
        - auto_switch_light_driveway
    enabler: motion_sensor_well_enabler
    time: 2

christmas_light_switch_front:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_christmas_front
    switch: input_select.light_christmas_front

christmas_light_switch_tree:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.light_christmas_tree
    switch: input_select.light_christmas_tree

christmas_lights_date_enabler:
    module: enabler
    class: DateEnabler
    dependencies: locker
    begin: 11-15
    end: 02-28

christmas_lights_enabler:
    module: enabler
    class: MultiEnabler
    dependencies:
        - christmas_lights_date_enabler
        - sun_enabler_night
        - locker
    enablers:
        - christmas_lights_date_enabler
        - sun_enabler_night

christmas_light_switcher:
    class: EnabledSwitch
    module: enabled_switch
    dependencies:
        - christmas_light_switch_front
        - christmas_light_switch_tree
        - christmas_lights_enabler
        - locker
    global_dependencies:
        - auto_switch
    enabler: christmas_lights_enabler
    targets:
        - christmas_light_switch_front
        - christmas_light_switch_tree

light_outside_switcher_1:
    class: EnabledSwitch
    module: enabled_switch
    dependencies:
        - auto_switch_light_outside_1
        - sun_enabler_night
        - locker
    global_dependencies:
        - auto_switch
    enabler: sun_enabler_night
    targets:
        - auto_switch_light_outside_1

lights_should_be_on:
    module: enabler
    class: ExpressionEnabler
    expr: >
        v.input_select.presence_mode == "home" or (
        v.input_select.presence_mode == "away" and
        int(v.sensor.time[0:2]) > 12)
    dependencies:
        - sun_enabler_night
        - locker
    global_dependencies:
        - expression

light_outside_2_4_5_6_enabler:
    module: enabler
    class: ExpressionEnabler
    expr: >
        e.sun_enabler_night and e.lights_should_be_on
    dependencies:
        - sun_enabler_night
        - lights_should_be_on
        - locker
    global_dependencies:
        - expression

light_outside_switcher_2_4_5_6:
    class: EnabledSwitch
    module: enabled_switch
    dependencies:
        - auto_switch_light_outside_2
        - auto_switch_light_outside_4
        - auto_switch_light_outside_5
        - auto_switch_light_outside_6
        - locker
        - light_outside_2_4_5_6_enabler
    global_dependencies:
        - auto_switch
    enabler: light_outside_2_4_5_6_enabler
    targets:
        - auto_switch_light_outside_2
        - auto_switch_light_outside_4
        - auto_switch_light_outside_5
        - auto_switch_light_outside_6

light_outside_3_enabler:
    module: enabler
    class: ExpressionEnabler
    expr: >
        e.lights_should_be_on and
        (e.sun_enabler_night or
        (v.sensor.light_shadow != 'unknown' and
        v.sensor.light_shadow <= 20))
    dependencies:
        - sun_enabler_night
        - lights_should_be_on
        - locker
    global_dependencies:
        - expression

light_outside_switcher_3:
    class: EnabledSwitch
    module: enabled_switch
    dependencies:
        - auto_switch_light_outside_3
        - light_outside_3_enabler
        - locker
    global_dependencies:
        - auto_switch
    enabler: light_outside_3_enabler
    targets:
        - auto_switch_light_outside_3

home_light_switcher:
    class: TimerSequence
    module: timer_switch
    dependencies:
        - auto_switch_light_gate_reflector
        - auto_switch_light_driveway
        - sun_enabler_night
        - locker
    sensor: device_tracker.homeassistant_owntrackssamsung
    target_state: home
    enabler: sun_enabler_night
    sequence:
        - targets:
              - auto_switch_light_gate_reflector
              - auto_switch_light_driveway
          time: 5

hot_water_pump_enabler:
    module: enabler
    class: ValueEnabler
    dependencies: locker
    entity: input_select.presence_mode
    value: 'home'

auto_switch_hot_water_pump:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: input_boolean.hot_water_pump
    switch: input_select.hot_water_pump
    reentrant: true

hot_water_pump_switch:
    class: EnabledSwitch
    module: enabled_switch
    dependencies:
        - hot_water_pump_enabler
        - auto_switch_hot_water_pump
        - locker
    enabler: hot_water_pump_enabler
    targets:
        - auto_switch_hot_water_pump

hot_water_pump_timer_enabler:
    module: enabler
    class: ValueEnabler
    dependencies: locker
    entity: input_select.presence_mode
    value: 'sleep'

hot_water_pump_timer:
    class: TimerSequence
    module: timer_switch
    dependencies:
        - auto_switch_hot_water_pump
        - hot_water_pump_timer_enabler
        - locker
    expr: >
        v['sensor.time'] + ':00' ==
        v['input_datetime.hot_water_' + args['weekdays'][now().weekday()]]
    sequence:
        - targets:
              - auto_switch_hot_water_pump
          time: 300
    enabler: hot_water_pump_timer_enabler
    weekdays:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday

auto_switch_hot_water_pump_backend:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.hot_water_pump
    reentrant: true

hot_water_backend_enabler:
    module: enabler
    class: ValueEnabler
    dependencies: locker
    entity: input_boolean.hot_water_pump
    value: 'on'

hot_water_pump_backend_timer:
    class: TimerSwitch
    module: timer_switch
    dependencies:
        - auto_switch_hot_water_pump_backend
        - hot_water_backend_enabler
        - locker
    expr: >
        v.binary_sensor.cellar_controller_available is not True or
        v.sensor.temperature_hot_water == 'unknown' or
        v.sensor.temperature_hot_water <= 41
    targets:
        - auto_switch_hot_water_pump_backend
    enabler: hot_water_backend_enabler
    time: 2

rain_history:
    module: history
    class: HistoryManager
    dependencies: locker
    entity: sensor.rain
    max_interval:
        days: 10

rain_last_day:
    module: history
    class: AggregatedValue
    dependencies:
        - rain_history
        - locker
    manager: rain_history
    target: sensor.rain_last_day
    interval:
        days: 1
    aggregator: sum
    attributes:
        unit_of_measurement: "mm"
        friendly_name: "Eső 1 nap"
        icon: mdi:weather-rainy

rain_decaying:
    module: history
    class: AggregatedValue
    dependencies:
        - rain_history
        - locker
    manager: rain_history
    target: sensor.rain_decaying
    interval:
        days: 1
    fraction: 0.65
    aggregator: decay_sum
    attributes:
        unit_of_measurement: "mm"
        friendly_name: "Eső amortizált"
        icon: mdi:weather-rainy

temperature_history:
    module: history
    class: HistoryManager
    dependencies: locker
    entity: sensor.temperature_outside
    max_interval:
        days: 1

maximum_temperature_last_day:
    module: history
    class: AggregatedValue
    dependencies:
        - temperature_history
        - locker
    manager: temperature_history
    target: sensor.maximum_temperature_last_day
    interval:
        days: 1
    aggregator: max
    attributes:
        unit_of_measurement: "°C"
        friendly_name: "Maximum hőmérséklet 1 nap"
        icon: mdi:thermometer-high

sprinkler_run_time:
    class: Expression
    module: expression
    dependencies:
        - locker
        - rain_decaying
        - maximum_temperature_last_day
    target: sensor.sprinkler_run_time
    expr: >
        1.0 * v.sensor.maximum_temperature_last_day - 7.0
        - 5.0 * v.sensor.rain_decaying
    attributes:
        unit_of_measurement: min
        friendly_name: "Locsolás idő"
        icon: mdi:timer

sprinkler_enabler:
    module: enabler
    class: ExpressionEnabler
    expr: >
        v.input_boolean.sprinkler and v.sensor.sprinkler_run_time >= 5.0
        and v.sensor.rain_last_day < 1.0
    dependencies:
        - locker
        - sprinkler_run_time
        - rain_last_day
    global_dependencies:
        - expression

auto_switch_sprinkler_1:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.auto_sprinkler1
    switch: input_select.auto_sprinkler1
    reentrant: true

auto_switch_sprinkler_2:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.auto_sprinkler2
    switch: input_select.auto_sprinkler2
    reentrant: true

auto_switch_sprinkler_3:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.auto_sprinkler3
    switch: input_select.auto_sprinkler3
    reentrant: true

sprinkler_timer:
    class: TimerSequence
    module: timer_switch
    dependencies:
        - auto_switch_sprinkler_1
        - auto_switch_sprinkler_2
        - sprinkler_enabler
        - sprinkler_run_time
        - locker
    expr: v.sensor.time == '21:00'
    sequence:
        - targets:
              - auto_switch_sprinkler_1
          time: sensor.sprinkler_run_time
        - targets:
              - auto_switch_sprinkler_2
          time: sensor.sprinkler_run_time
        - targets:
              - auto_switch_sprinkler_3
          time: sensor.sprinkler_run_time
    enabler: sprinkler_enabler

socket_bedroom_1:
    module: auto_switch
    class: AutoSwitch
    dependencies: locker
    target: switch.socket_bedroom_1
    switch: input_select.socket_bedroom_1

socket_bedroom_1_enabler:
    module: enabler
    class: ExpressionEnabler
    expr: >
        (v.input_select.socket_bedroom_1_mode == "karácsonyfa" and
        v.input_select.presence_mode == "home") or
        (v.input_select.socket_bedroom_1_mode == "szúnyogirtó" and
        v.input_select.presence_mode == "sleep" and
        v.binary_sensor.window_bedroom)
    dependencies:
        - locker
    global_dependencies:
        - expression

socket_bedroom_1_switcher:
    class: EnabledSwitch
    module: enabled_switch
    dependencies:
        - socket_bedroom_1
        - socket_bedroom_1_enabler
        - locker
    global_dependencies:
        - auto_switch
    enabler: socket_bedroom_1_enabler
    targets:
        - socket_bedroom_1

availability_alerts:
    module: alert
    class: AlertAggregator
    target: binary_sensor.availability_alert
    trigger_expr: not v[name]
    text_expr: name[14:-10]
    timeout:
        minutes: 5
    dependencies:
        - locker
    global_dependencies:
        - expression
    sources:
        - binary_sensor.furnace_temperature_available
        - binary_sensor.well_controller_available
        - binary_sensor.main_controller_available
        - binary_sensor.main_controller2_available
        - binary_sensor.driveway_available
        - binary_sensor.cellar_controller_available
        - binary_sensor.living_room_temperature_available
        - binary_sensor.bedroom_temperature_available
        - binary_sensor.dishwasher_sensor_available
        - binary_sensor.gate_reflector_available
        - binary_sensor.attic_lower_available

tracker_changes:
    class: ChangeTracker
    module: history
    entity: device_tracker.homeassistant_owntrackssamsung
    dependencies: locker

tracker_updates:
    class: ChangeTracker
    module: history
    entity: sensor.owntrackssamsung_last_updated
    dependencies: locker

tracker_last_updated:
    module: expression
    class: Expression
    dependencies:
        - locker
        - tracker_changes
    expr: >
        int((now() - c.tracker_updates).total_seconds()) // 60
    target: sensor.tracker_last_updated
    attributes:
        unit_of_measurement: min

tracker_last_changed:
    module: expression
    class: Expression
    dependencies:
        - locker
        - tracker_changes
    expr: >
        int((now() - c.tracker_changes).total_seconds()) // 60
    target: sensor.tracker_last_changed
    attributes:
        unit_of_measurement: min

tracker_not_updated:
    module: expression
    class: Expression
    dependencies:
        - locker
        - tracker_last_updated
    expr: v.sensor.tracker_last_updated >= 120
    target: binary_sensor.tracker_not_updated
